{"id":"test.html","dependencies":[{"name":"./main.css","dynamic":true,"resolved":"/Users/elizabeth/Documents/Study/PINS/PINS Website/pins.github.io/main.css","parent":"/Users/elizabeth/Documents/Study/PINS/PINS Website/pins.github.io/test.html"}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<title>three.js webgl - GLTFloader</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"/4abed1c996f46e1b2ad61757af46ece4.css\">\n\t</head>\n\n\t<body>\n\t\t<div id=\"info\">\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - GLTFLoader<br>\n\t\t\tBattle Damaged Sci-fi Helmet by\n\t\t\t<a href=\"https://sketchfab.com/theblueturtle_\" target=\"_blank\" rel=\"noopener\">theblueturtle_</a><br>\n\t\t\t<a href=\"https://hdrihaven.com/hdri/?h=royal_esplanade\" target=\"_blank\" rel=\"noopener\">Royal Esplanade</a> from <a href=\"https://hdrihaven.com/\" target=\"_blank\" rel=\"noopener\">HDRI Haven</a>\n\t\t</div>\n\n\t\t<script type=\"importmap\">\n\t\t\t{\n\t\t\t\t\"imports\": {\n\t\t\t\t\t\"three\": \"../build/three.module.js\",\n\t\t\t\t\t\"three/addons/\": \"./jsm/\"\n\t\t\t\t}\n\t\t\t}\n\t\t</script>\n\n\t\t<script type=\"module\">\n\n\t\t\timport * as THREE from 'three';\n\n\t\t\timport { OrbitControls } from 'three/addons/controls/OrbitControls.js';\n\t\t\timport { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n\t\t\timport { RGBELoader } from 'three/addons/loaders/RGBELoader.js';\n\n\t\t\tlet camera, scene, renderer;\n\n\t\t\tinit();\n\n\t\t\tfunction init() {\n\n\t\t\t\tconst container = document.createElement( 'div' );\n\t\t\t\tdocument.body.appendChild( container );\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 0.25, 20 );\n\t\t\t\tcamera.position.set( - 1.8, 0.6, 2.7 );\n\n\t\t\t\tscene = new THREE.Scene();\n\n\t\t\t\tnew RGBELoader()\n\t\t\t\t\t.setPath( 'textures/equirectangular/' )\n\t\t\t\t\t.load( 'royal_esplanade_1k.hdr', function ( texture ) {\n\n\t\t\t\t\t\ttexture.mapping = THREE.EquirectangularReflectionMapping;\n\n\t\t\t\t\t\tscene.background = texture;\n\t\t\t\t\t\tscene.environment = texture;\n\n\t\t\t\t\t\trender();\n\n\t\t\t\t\t\t// model\n\n\t\t\t\t\t\tconst loader = new GLTFLoader().setPath( 'models/gltf/DamagedHelmet/glTF/' );\n\t\t\t\t\t\tloader.load( 'DamagedHelmet.gltf', async function ( gltf ) {\n\n\t\t\t\t\t\t\tconst model = gltf.scene;\n\n\t\t\t\t\t\t\t// wait until the model can be added to the scene without blocking due to shader compilation\n\n\t\t\t\t\t\t\tawait renderer.compileAsync( model, camera, scene );\n\n\t\t\t\t\t\t\tscene.add( model );\n\n\t\t\t\t\t\t\trender();\n\t\t\t\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\t\t\t\trenderer.toneMappingExposure = 1;\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\n\t\t\t\tconst controls = new OrbitControls( camera, renderer.domElement );\n\t\t\t\tcontrols.addEventListener( 'change', render ); // use if there is no animation loop\n\t\t\t\tcontrols.minDistance = 2;\n\t\t\t\tcontrols.maxDistance = 10;\n\t\t\t\tcontrols.target.set( 0, 0, - 0.2 );\n\t\t\t\tcontrols.update();\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize );\n\n\t\t\t}\n\n\t\t\tfunction onWindowResize() {\n\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t\t\trender();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction render() {\n\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t}\n\n\t\t</script>\n\n\t</body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"89e24e2a87a53b660f411644e9477d59","cacheData":{}}